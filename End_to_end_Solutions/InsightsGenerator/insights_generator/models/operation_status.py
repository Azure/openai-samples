# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from insights_generator.models.base_model_ import Model
from insights_generator import util


class OperationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self,
                 id: str = None,
                 created: datetime = None,
                 updated: datetime = None,
                 status: str = None,
                 message: str = None):
        """OperationStatus - a model defined in OpenAPI

        :param id: The id of this OperationStatus.
        :param created: The created of this OperationStatus.
        :param updated: The updated of this OperationStatus.
        :param status: The status of this OperationStatus.
        :param message: The message of this OperationStatus.
        """
        self.openapi_types = {
            'id': str,
            'created': datetime,
            'updated': datetime,
            'status': str,
            'message': str
        }

        self.attribute_map = {
            'id': 'id',
            'created': 'created',
            'updated': 'updated',
            'status': 'status',
            'message': 'message'
        }

        self._id = id
        self._created = created
        self._updated = updated
        self._status = status
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationStatus of this OperationStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OperationStatus.


        :return: The id of this OperationStatus.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OperationStatus.


        :param id: The id of this OperationStatus.
        :type id: str
        """

        self._id = id

    @property
    def created(self):
        """Gets the created of this OperationStatus.


        :return: The created of this OperationStatus.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this OperationStatus.


        :param created: The created of this OperationStatus.
        :type created: datetime
        """

        self._created = created

    @property
    def updated(self):
        """Gets the updated of this OperationStatus.


        :return: The updated of this OperationStatus.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this OperationStatus.


        :param updated: The updated of this OperationStatus.
        :type updated: datetime
        """

        self._updated = updated

    @property
    def status(self):
        """Gets the status of this OperationStatus.


        :return: The status of this OperationStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OperationStatus.


        :param status: The status of this OperationStatus.
        :type status: str
        """

        self._status = status

    @property
    def message(self):
        """Gets the message of this OperationStatus.


        :return: The message of this OperationStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this OperationStatus.


        :param message: The message of this OperationStatus.
        :type message: str
        """

        self._message = message
